setwd("~/Git/R/reproducible_research/Assesment/a1/")
data_a1 <- read.csv("activity.csv")
str(data_a1[,"date"])
steps_per_day <- tapply(data_a1$steps,data_a1$date,sum,na.rm=TRUE)
hist(steps_per_day)
median_a1 <- median(steps_per_day)
mean_a1 <- mean(steps_per_day)
plot(steps_per_day,type="l")
names(steps_per_day)
?plot
plot(steps_per_day,names(steps_per_day),type="l")
?plot
values(steps_per_day)
value(steps_per_day)
values(steps_per_day)
data(steps_per_day)
?names
names(steps_per_day)
steps_per_day
paste(steps_per_day)
plot(paste(steps_per_day),names(steps_per_day),type="l")
y_plot <- as.Date(names(steps_per_day))
?as.Date
y_plot <- as.Date(names(steps_per_day)[])
?sapply
y_plot <- sapply(names(steps_per_day).as.Date)
y_plot <- lapply(names(steps_per_day).as.Date)
y_plot <- lapply(names(steps_per_day),as.Date)
y_plot <- sapply(names(steps_per_day),as.Date)
y_plot
plot(paste(steps_per_day),y_plot,type="l")
plot(steps_per_day)
plot(steps_per_day)
plot(steps_per_day,type="l")
plotdata_a1$steps,data_a1$date,type="l")
plot(data_a1$steps,data_a1$date,type="l")
plot(data_a1$date,data_a1$steps,type="l")
plot(data_a1$date,data_a1$steps,type="l")
steps_per_day <- sapply(data_a1$steps,data_a1$date,sum,na.rm=TRUE)
steps_per_day <- tapply(data_a1$steps,data_a1$date,sum,na.rm=TRUE)
str(data_a1[,"date"])
View(data_a1)
View(data_a1)
steps_of_interval_avaraged_across_all_days<- tapply(data_a1$steps,data_a1$interval,sum,na.rm=TRUE)/61
steps_of_interval_avaraged_across_all_days<- tapply(data_a1$steps,data_a1$interval,sum,na.rm=TRUE)
steps_of_interval_avaraged_across_all_days<- tapply(data_a1$steps,data_a1$interval,sum,na.rm=TRUE)/61
?plot
plot(steps_of_interval_avaraged_across_all_days,type="l")
steps_of_interval_avaraged_across_all_days
?max
?fred
names(steps_of_interval_avaraged_across_all_days==max(steps_of_interval_avaraged_across_all_days))
names(steps_of_interval_avaraged_across_all_days[steps_of_interval_avaraged_across_all_days==max(steps_of_interval_avaraged_across_all_days)])
sum(is.na(data_a1$steps))
for(i in seq_len(nrow(data_a1))) {
if(is.na(data_a1$steps[i]){
data_a1$steps[i]<- steps_of_interval_avaraged_across_all_days["data_a1$interval[i]"]
}
}
nrow(data_a1)
seq_len(nrow(data_a1))
for(i in seq_len(nrow(data_a1))) {
if(is.na(data_a1$steps[i]){
data_a1$steps[i]<- steps_of_interval_avaraged_across_all_days["data_a1$interval[i]"]
}
}
data_a1$steps[1]
data_a1$steps[1444]
data_a1$steps[12355]
data_a1$steps[840]
data_a1$steps[850]
names(steps_of_interval_avaraged_across_all_days[steps_of_interval_avaraged_across_all_days==max(steps_of_interval_avaraged_across_all_days)])
data_a1$steps[835]
is.na(data_a1$steps[1])
for(i in seq_len(nrow(data_a1))) {
if(is.na(data_a1$steps[i])){
data_a1$steps[i]<- steps_of_interval_avaraged_across_all_days["data_a1$interval[i]"]
}
}
View(data_a1)
View(data_a1)
steps_of_interval_avaraged_across_all_days["data_a1$interval[1]"
steps_of_interval_avaraged_across_all_days["data_a1$interval[1]"]
steps_of_interval_avaraged_across_all_days[1]
steps_of_interval_avaraged_across_all_days[2]
steps_of_interval_avaraged_across_all_days[3]
10/5+1
for(i in seq_len(nrow(data_a1))) {
if(is.na(data_a1$steps[i])){
temp <- data_a1$interval[i]/5+1
data_a1$steps[i]<- steps_of_interval_avaraged_across_all_days[temp]
}
}
View(data_a1)
View(data_a1)
sum(is.na(data_a1$steps))
View(data_a1)
View(data_a1)
names(steps_of_interval_avaraged_across_all_days)
data_a1 <- read.csv("activity.csv")
plot(paste(steps_of_interval_avaraged_across_all_days),names(steps_of_interval_avaraged_across_all_days)type="l")
plot(steps_of_interval_avaraged_across_all_days,type="l")
101%100
101/100
integer(101/100)
101%%100
for(i in seq_len(nrow(data_a1))) {
if(is.na(data_a1$steps[i])){
temp <- integer(data_a1$interval[i]/100)*12+(data_a1$interval[i]%%100)/5+1
data_a1$stepsx[i]<- steps_of_interval_avaraged_across_all_days[temp]
}
}
for(i in seq_len(nrow(data_a1))) {
if(is.na(data_a1$steps[i])){
temp <- integer(data_a1$interval[i]/100)*12+(data_a1$interval[i]%%100)/5+1
data_a1$stepsx[i]<- steps_of_interval_avaraged_across_all_days[temp]
}
}
for(i in seq_len(nrow(data_a1))) {
if(is.na(data_a1$steps[i])){
temp <- integer(data_a1$interval[i]/100)*12+(data_a1$interval[i]%%100)/5+1
data_a1$steps[i]<- steps_of_interval_avaraged_across_all_days[temp]
}
}
View(data_a1)
View(data_a1)
temp <- integer(data_a1$interval[1]/100)*12+(data_a1$interval[1]%%100)/5+1
temp
temp <- integer(data_a1$interval[2]/100)*12+(data_a1$interval[2]%%100)/5+1
temp
integer(data_a1$interval[2]/100)
integer(data_a1$interval[44]/100)
data_a1$interval[44]/100
?integer
floor(data_a1$interval[44]/100)
for(i in seq_len(nrow(data_a1))) {
if(is.na(data_a1$steps[i])){
temp <- floor(data_a1$interval[i]/100)*12+(data_a1$interval[i]%%100)/5+1
data_a1$steps[i]<- steps_of_interval_avaraged_across_all_days[temp]
}
}
View(data_a1)
View(data_a1)
sum(is.na(data_a1$steps))
plot(steps_of_interval_avaraged_across_all_days,type="l")
?plot
steps_per_day_total <- tapply(data_a1$steps,data_a1$date,sum,na.rm=TRUE)
clear
clear()
#1
setwd("~/Git/R/reproducible_research/Assesment/a1/")
data_a1 <- read.csv("activity.csv")
str(data_a1[,"date"])
#2.1
steps_per_day_total <- tapply(data_a1$steps,data_a1$date,sum,na.rm=TRUE)
#2.2
hist(steps_per_day_total)
#2.3
median_a1 <- median(steps_per_day_total)
mean_a1 <- mean(steps_per_day_total)
#3.1
steps_of_interval_avaraged_across_all_days<- tapply(data_a1$steps,data_a1$interval,sum,na.rm=TRUE)/61
plot(steps_of_interval_avaraged_across_all_days,type="l")
#3.2
names(steps_of_interval_avaraged_across_all_days[steps_of_interval_avaraged_across_all_days==max(steps_of_interval_avaraged_across_all_days)])
#4.1
sum(is.na(data_a1$steps))
#4.2
#Devise a strategy for filling in all of the missing values in the dataset with the Devise a strategy for filling in all of the missing values in the dataset
for(i in seq_len(nrow(data_a1))) {
if(is.na(data_a1$steps[i])){
temp <- floor(data_a1$interval[i]/100)*12+(data_a1$interval[i]%%100)/5+1
data_a1$steps[i]<- steps_of_interval_avaraged_across_all_days[temp]
}
}
#4.3
hist(steps_per_day_total)
weekdays(data_a1$date[1])
weekdays(as.Date(data_a1$date[1]))
weekdays(as.Date(data_a1$date[2888]))
weekdays(as.Date(data_a1$date[1458]))
weekdays(as.Date(data_a1$date))
as.numeric(weekdays(as.Date(data_a1$date)))
unclass(weekdays(as.Date(data_a1$date)))
weekdays(as.Date(data_a1$date[9781]))!="星期六"
weekdays(as.Date(data_a1$date[1]))!="星期六"
1&2
1&0
weekdays(as.Date(data_a1$date))!="星期六"&weekdays(as.Date(data_a1$date))!="星期日"
pattern(weekdays(as.Date(data_a1$date))!="星期六"&weekdays(as.Date(data_a1$date))!="星期日") <- c("weekdays")
pattern <- null(nrow(data_a1))
pattern <- seq_len(nrow(data_a1))
pattern(weekdays(as.Date(data_a1$date))!="星期六"&weekdays(as.Date(data_a1$date))!="星期日") <- c("weekdays")
pattern[weekdays(as.Date(data_a1$date))!="星期六"&weekdays(as.Date(data_a1$date))!="星期日"] <- c("weekdays")
pattern[!weekdays(as.Date(data_a1$date))!="星期六"&weekdays(as.Date(data_a1$date))!="星期日"] <- c("weekdays")
pattern
pattern <- seq_len(nrow(data_a1))
pattern[weekdays(as.Date(data_a1$date))!="星期六"&weekdays(as.Date(data_a1$date))!="星期日"] <- c("weekday")
pattern[!(weekdays(as.Date(data_a1$date))!="星期六"&weekdays(as.Date(data_a1$date))!="星期日")] <- c("weekend")
pattern[!weekdays(as.Date(data_a1$date))!="星期六"&weekdays(as.Date(data_a1$date))!="星期日"] <- c("weekend")
pattern
class(pattern)
factor
?factor
as.facter(pattern)
as.factor(pattern)
pattern <- as.factor(pattern)
class(pattern)
str(pattern)
pattern <- seq_len(nrow(data_a1))
pattern[weekdays(as.Date(data_a1$date))!="星期六"&weekdays(as.Date(data_a1$date))!="星期日"] <- c("weekday")
pattern[!(weekdays(as.Date(data_a1$date))!="星期六"&weekdays(as.Date(data_a1$date))!="星期日")] <- c("weekend")
pattern <- as.factor(pattern)
str(pattern)
data_a1 <- cbind(data_a1,pattern)
View(data_a1)
View(data_a1)
sum(data_a1$pattern=="weekday")
sum(data_a1$pattern=="weekday")/288
sum(data_a1$pattern=="weekend")/288
steps_of_interval_avaraged_across_all_days_weekday<- tapply(data_a1$steps[data_a1$pattern="weekdays"],data_a1$interval[data_a1$pattern="weekdays"],sum,na.rm=TRUE)/d_d
plot(steps_of_interval_avaraged_across_all_days_weekday,type="l",ylab="weekday")
steps_of_interval_avaraged_across_all_days_weekday<- tapply(data_a1$steps[data_a1$pattern=="weekdays"],data_a1$interval[data_a1$pattern=="weekdays"],sum,na.rm=TRUE)/d_d
plot(steps_of_interval_avaraged_across_all_days_weekday,type="l",ylab="weekday")
d_d<- sum(data_a1$pattern=="weekday")/288 #count days of weekdays
d_e<- sum(data_a1$pattern=="weekend")/288 #count days of weekends
steps_of_interval_avaraged_across_all_days_weekday<- tapply(data_a1$steps[data_a1$pattern=="weekdays"],data_a1$interval[data_a1$pattern=="weekdays"],sum,na.rm=TRUE)/d_d
plot(steps_of_interval_avaraged_across_all_days_weekday,type="l",ylab="weekday")
steps_of_interval_avaraged_across_all_days<- tapply(data_a1$steps,data_a1$interval,sum,na.rm=TRUE)/61
plot(steps_of_interval_avaraged_across_all_days,type="l")
steps_of_interval_avaraged_across_all_days_weekday<- tapply(data_a1$steps[data_a1$pattern=="weekday"],data_a1$interval[data_a1$pattern=="weekday"],sum,na.rm=TRUE)/d_d
plot(steps_of_interval_avaraged_across_all_days_weekday,type="l",ylab="weekday")
steps_of_interval_avaraged_across_all_days_weekend<- tapply(data_a1$steps[data_a1$pattern=="weekend"],data_a1$interval[data_a1$pattern=="weekend"],sum,na.rm=TRUE)/d_e
plot(steps_of_interval_avaraged_across_all_days_weekend,type="l",ylab="weekend")
clear
#1
setwd("~/Git/R/reproducible_research/Assesment/a1/")
data_a1 <- read.csv("activity.csv")
str(data_a1[,"date"])
#2.1
steps_per_day_total <- tapply(data_a1$steps,data_a1$date,sum,na.rm=TRUE)
#2.2
hist(steps_per_day_total)
#2.3
median_a1 <- median(steps_per_day_total)
mean_a1 <- mean(steps_per_day_total)
#3.1
steps_of_interval_avaraged_across_all_days<- tapply(data_a1$steps,data_a1$interval,sum,na.rm=TRUE)/61
plot(steps_of_interval_avaraged_across_all_days,type="l")
#3.2
names(steps_of_interval_avaraged_across_all_days[steps_of_interval_avaraged_across_all_days==max(steps_of_interval_avaraged_across_all_days)])
#4.1
sum(is.na(data_a1$steps))
#4.2 4.3
#imputing missing values with the mean for that 5-minute interval
for(i in seq_len(nrow(data_a1))) {
if(is.na(data_a1$steps[i])){
temp <- floor(data_a1$interval[i]/100)*12+(data_a1$interval[i]%%100)/5+1
data_a1$steps[i]<- steps_of_interval_avaraged_across_all_days[temp]
}
}
#4.4
steps_per_day_total <- tapply(data_a1$steps,data_a1$date,sum,na.rm=TRUE)
hist(steps_per_day_total)
median_a1 <- median(steps_per_day_total)
mean_a1 <- mean(steps_per_day_total)
#5.1
pattern <- seq_len(nrow(data_a1))
pattern[weekdays(as.Date(data_a1$date))!="星期六"&weekdays(as.Date(data_a1$date))!="星期日"] <- c("weekday")
pattern[!(weekdays(as.Date(data_a1$date))!="星期六"&weekdays(as.Date(data_a1$date))!="星期日")] <- c("weekend")
pattern <- as.factor(pattern)
str(pattern)
data_a1 <- cbind(data_a1,pattern)
d_d<- sum(data_a1$pattern=="weekday")/288 #count days of weekdays
d_e<- sum(data_a1$pattern=="weekend")/288 #count days of weekends
steps_of_interval_avaraged_across_all_days_weekday<- tapply(data_a1$steps[data_a1$pattern=="weekday"],data_a1$interval[data_a1$pattern=="weekday"],sum,na.rm=TRUE)/d_d
plot(steps_of_interval_avaraged_across_all_days_weekday,type="l",ylab="weekday")
steps_of_interval_avaraged_across_all_days_weekend<- tapply(data_a1$steps[data_a1$pattern=="weekend"],data_a1$interval[data_a1$pattern=="weekend"],sum,na.rm=TRUE)/d_e
plot(steps_of_interval_avaraged_across_all_days_weekend,type="l",ylab="weekend")
setwd("~/GitHub/REP_PA1_TEMPLATE")
knit2html("PA1_template.RMD")
install.packages("knitr")
knit2html("PA1_template.RMD")
?knit2html
library(knitr)
knit2html("PA1_template.RMD")
